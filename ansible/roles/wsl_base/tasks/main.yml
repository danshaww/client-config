- name: Allow sudo without password
  become: true
  ansible.builtin.lineinfile:
    path: "/etc/sudoers.d/{{ base.username }}"
    line: "{{ base.username }} ALL=(ALL) NOPASSWD:ALL"
    create: true
    mode: '0644'
- name: Utility Installation
  become: true
  ansible.builtin.apt:
    pkg: "{{ packages }}"
    update_cache: true
  when: ansible_os_family == "Debian"
- name: Package Updates
  become: true
  ansible.builtin.apt:
    upgrade: true
  when: ansible_os_family == "Debian"
- name: Copy home directory files
  ansible.builtin.copy:
    src: home/
    dest: ~/
    mode: '0755'
- name: Copy home directory files (root)
  ansible.builtin.copy:
    src: home/
    dest: /root/
    mode: '0755'
  become: true
- name: Copy Executables
  ansible.builtin.copy:
    src: bin/
    dest: ~/bin/
    mode: '0755'
- name: Set Git user name
  community.general.git_config:
    name: user.name
    scope: global
    value: "{{ base.git_name }}"
- name: Set Git user email
  community.general.git_config:
    name: user.email
    scope: global
    value: "{{ base.git_email }}"
- name: Create Git Directory
  ansible.builtin.file:
    path: "{{ base.git_directory }}"
    state: directory
    mode: '0755'
- name: Populate SSH Config (user)
  ansible.builtin.lineinfile:
    path: ~/.ssh/config
    line: "{{ item }}"
    mode: '0755'
    create: true
  with_items: "{{ ssh_config }}"

- name: Install oh-my-posh
  ansible.builtin.include_tasks: oh_my_posh.yml
  when: base.enable_oh_my_posh

- name: Install Azure CLI
  ansible.builtin.include_tasks: az_cli.yml
  when: base.enable_az_cli

- name: Install Terraform
  ansible.builtin.include_tasks: terraform.yml
  when: base.enable_terraform

- name: Install Docker
  ansible.builtin.include_tasks: docker.yml
  when: base.enable_docker
